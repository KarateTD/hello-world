name: tag-release-image

on:
  push:
    branches:
      - change_values_yaml
    inputs:
      env:
        description: 'Environment'
        type: choice
        options:
          - 'dev'
          - 'qa'
        required: true
  workflow_dispatch:
    inputs:
      env:
        description: 'Environment'
        type: choice
        options:
          - 'dev'
          - 'qa'
        required: true

jobs:
  build-push:
    runs-on: ubuntu-latest
    outputs:
      image-name: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
      tag-version: ${{ steps.tag-dry-run.outputs.new_tag }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'

      - name: Semver
        id: tag-dry-run
        uses: anothrNick/github-tag-action@1.70.0
        env:
          DEFAULT_BRANCH: main
          WITH_V: false
          DRY_RUN: true

      - name: echo new tag  
        run: |
          echo "The next tag version will be: ${{ steps.tag-dry-run.outputs.new_tag }}"

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: 'ghcr.io/${{ github.repository }}'
          tags: |
            type=sha

  tag-image:
    needs: [build-push]
    name: Tag image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: echo image name
        run: |
          echo "The image name will be: ${{ needs.build-push.outputs.image-name }}"
          echo "The tag version will be: ${{ needs.build-push.outputs.tag-version }}"

      - name: build and push image
        id: build-image
        env:
          SOURCE: ${{needs.build-push.outputs.image-name}}
          TARGET: ghcr.io/${{ github.repository }}:${{needs.build-push.outputs.tag-version}}
          LATEST:  ghcr.io/${{ github.repository }}:latest
        run: |
          docker pull $SOURCE
          docker tag $SOURCE $TARGET
          docker tag $SOURCE $LATEST
          docker push $TARGET
          docker push $LATEST
          echo "::set-output name=tag-version::${{needs.build-push.outputs.tag-version}}"

