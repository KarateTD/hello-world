name: deploy-release-to-env

on:
  schedule:
    - cron: '0/5 * * * *'
  workflow_call:
    inputs:
      new_tag:
        description: 'Image tag'
        required: true
        type: string
      env:
        description: 'Environment'
        required: true
        type: string
  workflow_dispatch:
    inputs:
      new_tag:
        description: 'Image tag'
        required: true
        type: string
      env:
        description: 'Environment'
        required: true
        type: choice
        options:
          - dev
          - qa

env:
  GITHUB_TOKEN: ${{ secrets.AWS_ACCESS_KEY_ID }}

jobs:
  echo:
    if: ${{ github.event_name != 'schedule'}}
    runs-on: ubuntu-latest
    steps:
      - name: echo new tag
        run: |
          echo "The next tag version will be: ${{ github.event.inputs.new_tag }}"
          echo "The environment is: ${{ github.event.inputs.env }}"
          echo "The secret is: ${{ secrets.AWS_ACCESS_KEY_ID }}"
          echo "The secret2 is ${{ env.GITHUB_TOKEN}}"

  on-schedule:
    if: ${{ github.event_name == 'schedule'}}
    runs-on: ubuntu-latest
    name: Prep for Schedule
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
      - name: Sets the Tag
        id: set_version
        run: |
          DAYS=-3
          VERSION=""
          while [[ $VERSION = "" ]]; do
            TAGDATE=`date --date="${DAYS} days ago" +"%Y-%m-%d"`
            git fetch --tags
            VERSION=`git tag -l --sort=-creatordate --format '%(creatordate:short)%09%(refname:strip=2)' | grep ${TAGDATE} | head -1 | awk '{print $2}'`
            DAYS=$((DAYS + 1))
          done
          echo "version=$(echo $VERSION)" >> "$GITHUB_ENV"
          echo "env=$(echo qa)" >> "$GITHUB_ENV"
      - name: Print Time
        run: |
          echo "The next tag version will be: $version"
          echo "The environment is: $env"
          echo "The secret is: ${{ secrets.AWS_ACCESS_KEY_ID }}"
          echo "The secret2 is ${{ env.GITHUB_TOKEN}}"
      - name: Update ves-developer-experience in infra repo
        run: |
          pwd
          ls -la
          cd deploy/ves-developer-experience
          yq e -i '(.web.image.tag) |= "$version"' $env.yaml
          git diff
 